{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.jsx","App.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMonsters","searchField","setSearchField","filteredMonsters","setFilteredMonsters","useEffect","fetch","then","res","json","data","filteredMonsterList","filter","toLowerCase","includes","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAEaA,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpB,OACE,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,2BAA+DC,IAAI,YAC7E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCJLC,EAAW,SAACC,GACvB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAAMC,SAASC,KAAI,SAACV,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCLdQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACI,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6BHG,MAhCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNR,EADM,KACIS,EADJ,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,OAGmCH,mBAAS,IAH5C,mBAGNI,EAHM,KAGYC,EAHZ,KAoBb,OAfAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLV,EAAYU,QAEf,IAEHL,qBAAU,WACR,IAAMM,EAAsBpB,EAASqB,QAAO,SAAC9B,GAAD,OAC1CA,EAAQK,KAAK0B,cAAcC,SAASb,EAAYY,kBAElDT,EAAoBO,KACnB,CAACV,EAAaV,IAGf,sBAAKR,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,aAAc,SAACoB,GAAD,OAAOb,EAAea,EAAEC,OAAOC,QAC7CvB,YAAa,uBAEf,cAAC,EAAD,CAAUH,SAAUY,QC3B1Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.42820d69.chunk.js","sourcesContent":["import './card.styles.css';\n\nexport const Card = ({monster}) => {\n  return (\n    <div className=\"card-container\">\n        <img src={`https://robohash.org/${monster.id}/?set=set2&size=180x180`} alt=\"monster\"/>\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  );\n};","import './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster}></Card>\n      ))}\n    </div>\n  );\n};\n","import './search-box.styles.css';\n\nexport const SearchBox = ( {placeholder, handleChange} ) => {\n  return (\n      <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n      />\n  );\n};\n","import './App.css';\nimport { useEffect, useState } from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search-box/search-box';\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState('');\n  const [filteredMonsters, setFilteredMonsters] = useState([]);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((data) => {\n        setMonsters(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const filteredMonsterList = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    setFilteredMonsters(filteredMonsterList);\n  }, [searchField, monsters]);\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        handleChange={(e) => setSearchField(e.target.value)}\n        placeholder={'Search Monsters...'}\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}